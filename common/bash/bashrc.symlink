DOTFILES_ROOT=$HOME/.dotfiles
DOTFILE_SYSTEM_TYPE=$(cat $DOTFILES_ROOT/.system)

export SYSTEM_SPECIFIC_DOTFILES=$DOTFILES_ROOT/$DOTFILE_SYSTEM_TYPE

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our .bash or .env files
config_files=()
while IFS= read -r -d '' file; do
  config_files+=("$file")
done < <(find -H -L "$SYSTEM_SPECIFIC_DOTFILES" -type f -name '*.bash' -print0)
while IFS= read -r -d '' file; do
  config_files+=("$file")
done < <(find -H -L "$SYSTEM_SPECIFIC_DOTFILES" -type f -name '*.env' -print0)

# load the env/path files
for file in "${config_files[@]}"; do
  if [[ "$file" == */*.env ]]; then
    source "$file"
  fi
done

# Check for any `completion.bash` files and warn the user as they are not supported.
for file in "${config_files[@]}"; do
  if [[ "$file" == */completion.bash ]]; then
    echo "WARNING: $file will be loaded but might not work as expected. Completion files are supported yet in our bashrc."
  fi
done

# load everything but the env/path files
for file in "${config_files[@]}"; do
  if [[ "$file" != */*.env ]]; then
    source "$file"
  fi
done

# Append all folders called bin that are in the SYSTEM_SPECIFIC_DOTFILES or any of its subfolders to the $PATH
while IFS= read -r -d '' bin; do
  export PATH="$PATH:$bin"
done < <(find "$SYSTEM_SPECIFIC_DOTFILES" -type d -name bin -print0)

unset config_files